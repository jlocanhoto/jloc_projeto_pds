function hsvFilter(img)
  global hsv;
  global mask;
  global maskedHSV;
  global imageHandle;
  
  hsv = maskedHSV = rgb2hsv(img);
  [rows cols color] = size(img);
  mask = zeros(rows, cols);
  
  percentY = 0.6;
  percentX = percentY*cols/rows;
  f = figure ('name', 'HSV Filter', 'pos', [100 100 500 500]);
  axes ('position', [(1-percentX)/2, 0.35, percentX, percentY]);
  axis ([0, cols, 0, rows]);  
  imageHandle = image(img, 'XData', [0 cols], 'YData', [0 rows]);
  axis off;

  global hMin = uicontrol (                    ...
   'style', 'edit',                ...
   'string', '0', ...
   'Units', 'pixels',            ...
   'min', 360, ...
   'max', 360, ...
   'value', 0, ...
   'position', [50, 75, 100, 25], ...
   'callback', {@hChanged}          ...
  );
   
  global hMax = uicontrol (                     ...
     'style', 'edit',                    ...
     'string', '360', ...
     'Units', 'pixels',              ...
     'min', 360, ...
     'max', 360, ...
     'value', 360, ...
     'position', [50, 30, 100, 25], ...
     'callback', {@hChanged}            ...
   );
   
   hText = uicontrol (                    ...
     'style', 'text',                ...
     'string', 'H',     ...
     'Units', 'pixels',...
     'BackgroundColor', 'w', ...
     'Units', 'pixels',...
     'position', [95, 125, 10, 15] ...            
   );

  global sMin = uicontrol (                    ...
    'style', 'edit',                ...
    'string', '0', ...
    'Units', 'pixels',            ...
    'min', 100, ...
    'max', 100, ...
    'value', 0, ...
    'position', [175, 75, 100, 25], ...
    'callback', {@sChanged}          ...
  );
   
  global sMax = uicontrol (                     ...
     'style', 'edit',                    ...
     'string', '100', ...
     'Units', 'pixels',              ...
     'min', 100, ...
     'max', 100, ...
     'value', 100, ...
     'position', [175, 30, 100, 25], ...
     'callback', {@sChanged}            ...
   );
   
   sText = uicontrol (                    ...
     'style', 'text',                ...
     'string', 'S',     ...
     'Units', 'pixels',...
     'BackgroundColor', 'w', ...
     'Units', 'pixels',...
     'position', [220, 125, 10, 15] ...            
   );
   
  global vMin = uicontrol (                    ...
    'style', 'edit',                ...
    'string', '0', ...
    'Units', 'pixels',            ...
    'min', 100, ...
    'max', 100, ...
    'value', 0, ...
    'position', [300, 75, 100, 25], ...
    'callback', {@vChanged}          ...
  );
   
  global vMax = uicontrol (                     ...
     'style', 'edit',                    ...
     'string', '100', ...
     'Units', 'pixels',              ...
     'min', 100, ...
     'max', 100, ...
     'value', 100, ...
     'position', [300, 30, 100, 25], ...
     'callback', {@vChanged}            ...
   );
   
   vText = uicontrol (                    ...
     'style', 'text',                ...
     'string', 'V',     ...
     'Units', 'pixels',...
     'BackgroundColor', 'w', ...
     'Units', 'pixels',...
     'position', [345, 125, 10, 15] ...            
   );
end

function [value] = correct2int(src)
  value = str2num(get(src, 'string'));
  maximum = get(src, 'max');
  
  if (size(value)(1) > 0)
    if (value < 0)
      value = 0;
    elseif (value > maximum)
      value = maximum;
    end
  else
    value = get(src, 'value');
  end
  
  set(src, 'string', num2str(value));
end

function hChanged(src, event)
  global hMin;
  global hMax;
  global hsv;
  global maskedHSV;
  global imageHandle;
  
  layer = 1;
  minValue = correct2int(hMin)/get(src, 'max');
  maxValue = correct2int(hMax)/get(src, 'max');
  
  L = hsv(:,:,layer);
  mask(:,:,layer) = (L >= min(minValue, maxValue)) & (L <= max(minValue, maxValue));
  maskedHSV(:,:,layer) = mask(:,:,layer) .* hsv(:,:,layer);
  
  set(imageHandle ,'CData', hsv2rgb(maskedHSV));
end

function sChanged(src, event)
  global sMin;
  global sMax;
  global hsv;
  global maskedHSV;
  global imageHandle;
  
  layer = 2;
  minValue = correct2int(sMin)/get(src, 'max');
  maxValue = correct2int(sMax)/get(src, 'max');

  L = hsv(:,:,layer);
  mask(:,:,layer) = (L >= min(minValue, maxValue)) & (L <= max(minValue, maxValue));
  maskedHSV(:,:,layer) = mask(:,:,layer) .* hsv(:,:,layer);

  set(imageHandle ,'CData', hsv2rgb(maskedHSV));
end

function vChanged(src, event)
  global vMin;
  global vMax;
  global hsv;
  global maskedHSV;
  global imageHandle;
  
  layer = 3;
  minValue = correct2int(vMin)/get(src, 'max');
  maxValue = correct2int(vMax)/get(src, 'max');
  
  L = hsv(:,:,layer);
  mask(:,:,layer) = (L >= min(minValue, maxValue)) & (L <= max(minValue, maxValue));
  maskedHSV(:,:,layer) = mask(:,:,layer) .* hsv(:,:,layer);
  
  set(imageHandle ,'CData', hsv2rgb(maskedHSV));
end